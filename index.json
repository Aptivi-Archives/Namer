{
  "api/Namer.NameGenderType.html": {
    "href": "api/Namer.NameGenderType.html",
    "title": "Enum NameGenderType | Namer API - Aptivi",
    "keywords": "Enum NameGenderType Name gender type Namespace: Namer Assembly: Namer.dll Syntax public enum NameGenderType Fields Name Description Female Uses the list of female names Male s list Unified Uses the list of both male and female names"
  },
  "api/Namer.NameGenerator.html": {
    "href": "api/Namer.NameGenerator.html",
    "title": "Class NameGenerator | Namer API - Aptivi",
    "keywords": "Class NameGenerator Name generator class Inheritance object NameGenerator Namespace: Namer Assembly: Namer.dll Syntax public static class NameGenerator Methods | Edit this page View Source GenerateFirstNames(NameGenderType) Generates the first names Declaration public static string[] GenerateFirstNames(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateFirstNames(int, NameGenderType) Generates the first names Declaration public static string[] GenerateFirstNames(int Count, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateFirstNames(int, string, string, NameGenderType) Generates the first names Declaration public static string[] GenerateFirstNames(int Count, string NamePrefix, string NameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? string NamePrefix What should the name start with? string NameSuffix What should the name end with? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateFirstNamesAsync(NameGenderType) [Async] Generates the first names Declaration public static Task<string[]> GenerateFirstNamesAsync(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateFirstNamesAsync(int, NameGenderType) [Async] Generates the first names Declaration public static Task<string[]> GenerateFirstNamesAsync(int Count, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateFirstNamesAsync(int, string, string, NameGenderType) [Async] Generates the first names Declaration public static Task<string[]> GenerateFirstNamesAsync(int Count, string NamePrefix, string NameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? string NamePrefix What should the name start with? string NameSuffix What should the name end with? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateLastNames() Generates the last names Declaration public static string[] GenerateLastNames() Returns Type Description string[] List of generated names | Edit this page View Source GenerateLastNames(int) Generates the last names Declaration public static string[] GenerateLastNames(int Count) Parameters Type Name Description int Count How many names to generate? Returns Type Description string[] List of generated names | Edit this page View Source GenerateLastNames(int, string, string) Generates the last names Declaration public static string[] GenerateLastNames(int Count, string SurnamePrefix, string SurnameSuffix) Parameters Type Name Description int Count How many names to generate? string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? Returns Type Description string[] List of generated names | Edit this page View Source GenerateLastNamesAsync() [Async] Generates the last names Declaration public static Task<string[]> GenerateLastNamesAsync() Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateLastNamesAsync(int) [Async] Generates the last names Declaration public static Task<string[]> GenerateLastNamesAsync(int Count) Parameters Type Name Description int Count How many names to generate? Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateLastNamesAsync(int, string, string) [Async] Generates the last names Declaration public static Task<string[]> GenerateLastNamesAsync(int Count, string SurnamePrefix, string SurnameSuffix) Parameters Type Name Description int Count How many names to generate? string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateNames(NameGenderType) Generates the names Declaration public static string[] GenerateNames(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateNames(int, NameGenderType) Generates the names Declaration public static string[] GenerateNames(int Count, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateNames(int, string, string, string, string, NameGenderType) Generates the names Declaration public static string[] GenerateNames(int Count, string NamePrefix, string NameSuffix, string SurnamePrefix, string SurnameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? string NamePrefix What should the name start with? string NameSuffix What should the name end with? string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? NameGenderType genderType Gender type to use when generating names Returns Type Description string[] List of generated names | Edit this page View Source GenerateNamesAsync(NameGenderType) [Async] Generates the names Declaration public static Task<string[]> GenerateNamesAsync(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateNamesAsync(int, NameGenderType) [Async] Generates the names Declaration public static Task<string[]> GenerateNamesAsync(int Count, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source GenerateNamesAsync(int, string, string, string, string, NameGenderType) [Async] Generates the names Declaration public static Task<string[]> GenerateNamesAsync(int Count, string NamePrefix, string NameSuffix, string SurnamePrefix, string SurnameSuffix, NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description int Count How many names to generate? string NamePrefix What should the name start with? string NameSuffix What should the name end with? string SurnamePrefix What should the surname start with? string SurnameSuffix What should the surname end with? NameGenderType genderType Gender type to use when generating names Returns Type Description Task<string[]> List of generated names | Edit this page View Source PopulateNames(NameGenderType) Populates the names and the surnames for the purpose of initialization Declaration public static void PopulateNames(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names | Edit this page View Source PopulateNamesAsync(NameGenderType) [Async] Populates the names and the surnames for the purpose of initialization Declaration public static Task PopulateNamesAsync(NameGenderType genderType = NameGenderType.Unified) Parameters Type Name Description NameGenderType genderType Gender type to use when generating names Returns Type Description Task"
  },
  "api/Namer.html": {
    "href": "api/Namer.html",
    "title": "Namespace Namer | Namer API - Aptivi",
    "keywords": "Namespace Namer Classes NameGenerator Name generator class Enums NameGenderType Name gender type"
  },
  "index.html": {
    "href": "index.html",
    "title": "What is Namer? | Namer API - Aptivi",
    "keywords": "What is Namer? Namer is a library that parses the contact files created by Outlook or other programs. It supports both single-contact VCF files and multiple-contact VCF files. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Namer, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request; we don't support override files that are made by clicking on Improve this doc. Any meaningful contributions are welcome. Copyright (c) 2022 Aptivi. All rights reserved."
  }
}